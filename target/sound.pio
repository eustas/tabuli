.program sound
.side_set 1 opt

; Outer loop: pull 2 items and serve
; Inner loop: interleave 1 bit from each item and set pins
; Processing is isochronous: every 8 ticks 2 bits are sent
; Thus an outer loop takes 32*8 = 256 ticks
; FIFO is TX-joined; full FIFO is 4x2 items - i.e. contains enough data for
; 256*4=1024 ticks
; All SMs are synchronous; SMs in different PIOs are stared serially; to make
; all SMs across PIOs synchronous, the first started PIO has to wait for few
; ticks

public entry_point0:     ; start of program for PIO0
    nop [1]              ; sync PIO0/PIO1
public entry_point1:     ; start of program for PIO1
loop:                    ; 
    pull                 ; 0 / 8
    mov isr, osr         ; 1
    pull                 ; 2
again:                   ;
    out y, 1             ; 3 / 11
    jmp !y, bit0         ; 4
bit1:                    ;
    mov pins, isr side 1 ; 5
    jmp !osre sync       ; 6
    jmp loop             ; 7
bit0:                    ;
    mov pins, isr side 0 ; 5
    jmp !osre, sync      ; 6
    jmp loop             ; 7
sync:                    ;
    in null, 1           ; 7
    jmp again        [2] ; 8
